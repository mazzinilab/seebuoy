name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install poetry
        poetry config virtualenvs.create false
        poetry install --no-interaction
        poetry shell

    - name: Lint with flake8
      run: |
        flake8 seebuoy
        black --check seebuoy

    - name: Test with pytest
      run: |
        pytest

    - name: Build artifact
      run: poetry build

    - name: Build docs
      run: mkdocs build

    - name: Deploy to netlify
      uses: netlify/actions/cli@master
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      with:
        args: deploy --dir=site
        secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_SITE_ID"]'

    - name: Upload Dist
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: dist


  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:

    - name: Download dist
      uses: actions/download-artifact@v2
      with:
        name: release
        path: dist

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Poetry
      run: python -m pip install poetry

    - name: Publish to pypi
      run: poetry publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
